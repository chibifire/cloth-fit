---
name: Build

on:
    push:
        branches: [main]
    pull_request:

env:
    CTEST_OUTPUT_ON_FAILURE: ON
    CTEST_PARALLEL_LEVEL: 1

jobs:
  ####################
  # Linux
  ####################

    Linux:
        name: ${{ matrix.name }} (${{ matrix.config }}, ${{ matrix.threading }})
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                config: [DebugNoSymbols, Release]
                threading: [TBB]
                include:
                    - os: ubuntu-latest
                      name: Linux
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4.1.6
              with:
                  fetch-depth: 10

            - name: Dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get -o Acquire::Retries=3 install ccache
                  echo 'CACHE_PATH=~/.cache/ccache' >> "$GITHUB_ENV"
                  sudo apt-get install -y libboost-iostreams-dev libtbb-dev libblosc-dev

            - name: Cache Build
              id: cache-build
              uses: actions/cache@v4
              if: matrix.config == 'Release' # debug cache is not working
              with:
                  path: ${{ env.CACHE_PATH }}
                  key: ${{ runner.os }}-${{ matrix.config }}-${{ matrix.threading }}-cache-${{ github.sha }}
                  restore-keys: ${{ runner.os }}-${{ matrix.config }}-${{ matrix.threading }}-cache

            - name: Prepare ccache
              run: |
                  # ccache --max-size=1.0G
                  ccache -V && ccache --show-stats && ccache --zero-stats

            - name: Configure
              run: |
                  mkdir -p build
                  cd build
                  cmake .. \
                    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                    -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
                    -DCMAKE_CXX_FLAGS_DEBUGNOSYMBOLS="" \
                    -DPOLYFEM_THREADING=${{ matrix.threading }}

            - name: Build
              run: cd build; make -j2; ccache --show-stats

            - name: Tests
              run: cd build; OMP_NUM_THREADS=1 ctest --verbose --output-on-failure

    # - name: Setup tmate session
    #   if: ${{ failure() }}
    #   uses: mxschmitt/action-tmate@v3

  ####################
  # MacOS
  ####################

    MacOS:
        name: ${{ matrix.os }} (${{ matrix.config }}, ${{ matrix.threading }})
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [macos-latest, macos-14]
                config: [DebugNoSymbols, Release]
                threading: [TBB]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4.1.6
              with:
                  fetch-depth: 10

            - name: Dependencies
              run: |
                  brew install ccache
                  echo 'CACHE_PATH=~/Library/Caches/ccache' >> "$GITHUB_ENV"
                  brew install boost tbb c-blosc

            - name: Cache Build
              id: cache-build
              uses: actions/cache@v4
              with:
                  path: ${{ env.CACHE_PATH }}
                  key: ${{ runner.os }}-${{ matrix.config }}-${{ matrix.threading }}-cache-${{ github.sha }}
                  restore-keys: ${{ runner.os }}-${{ matrix.config }}-${{ matrix.threading }}-cache

            - name: Prepare ccache
              run: |
                  ccache --max-size=1.0G
                  ccache -V && ccache --show-stats && ccache --zero-stats

            - name: Configure
              run: |
                  mkdir -p build
                  cd build
                  cmake .. \
                    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                    -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
                    -DCMAKE_CXX_FLAGS_DEBUGNOSYMBOLS="" \
                    -DPOLYFEM_THREADING=${{ matrix.threading }}

            - name: Build
              run: cd build; make -j2; ccache --show-stats

            - name: Tests
              run: cd build; ctest --verbose --output-on-failure
